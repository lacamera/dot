#!/usr/bin/env bash
# designed for bash 4.0+
case $- in
  *i*) ;; # interactive
  *) return ;;
esac

has() { type "$1" &>/dev/null; }

function parse_git_branch {
    git rev-parse --git-dir > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        git_status="$(git status 2> /dev/null)"
        branch_pattern="^# On branch ([^${IFS}]*)"
        detached_branch_pattern="# Not currently on any branch"
        remote_pattern="# Your branch is (.*) of"
        diverge_pattern="# Your branch and (.*) have diverged"
        untracked_pattern="# Untracked files:"
        new_pattern="new file:"
        not_staged_pattern="Changes not staged for commit"

        if [[ ${git_status}} =~ ${not_staged_pattern} ]]; then
            state="✔"
        fi

        if [[ ${git_status} =~ ${remote_pattern} ]]; then
            if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
                remote="↑"
            else
                remote="↓"
            fi
        fi
        if [[ ${git_status} =~ ${new_pattern} ]]; then
            remote="+"
        fi
        if [[ ${git_status} =~ ${untracked_pattern} ]]; then
            remote="✖"
        fi
        if [[ ${git_status} =~ ${diverge_pattern} ]]; then
            remote="↕"
        fi
  	branch="$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')"
        echo "(${branch}${state}${remote})"
    fi
    return
}

export XDG_CACHE_HOME="${XDG_CACHE_HOME:-"$HOME/.cache"}"
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-"$HOME/.config"}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-"$HOME/.local/share"}"
export XDG_STATE_HOME="${XDG_STATE_HOME:-"$HOME/.local/state"}"
export XDG_BIN_HOME="${XDG_BIN_HOME:-"$HOME/.local/bin"}"

export PS1="\u@\h \W % "

export USER="${USER:-$(whoami)}"
export EDITOR=nvim
export VISUAL=nvim
export BROWSER=safaridriver

export REPOS="$HOME/Source"
export GHUSER=lacamera
export GHREPOS="$REPOS/github.com/$GHUSER"

export GPG_TTY="$(tty)"
export LESS="-R"
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LC_COLLATE=C
export CFLAGS="-Wall -Wextra -Werror -O0 -fsanitize=address -g"
export GOPATH="$XDG_DATA_HOME/go"
export GOBIN="$XDG_BIN_HOME"

# Stop history from saving duplicate commands
# and commands that begin with leading space
export HISTCONTROL=ignoreboth
export HISTSIZE=2048
export HISTFILESIZE=8192

m(){
  [[ -z "$@" ]] && return
  eval "$@" | less -R
}

path() {
  echo -e ${PATH//:/\\n}
}

pathappend() {
  for arg in "$@"; do
    [[ -d "$arg" ]] || continue
    arg="${arg%%/}"
    PATH="${PATH//":$arg:"/:}"
    PATH="${PATH#"$arg:"}"
    PATH="${PATH%":$arg"}"
    export PATH="${PATH:+"$PATH:"}$arg"
  done
}

pathprepend() {
  for arg in "$@"; do
    [[ -d "$arg" ]] || continue
    arg="${arg%%/}"
    PATH="${PATH//":$arg:"/:}"
    PATH="${PATH#"$arg:"}"
    PATH="${PATH%":$arg"}"
    export PATH="$arg${PATH:+":$PATH"}"
  done
}

pathprepend /bin\
  /sbin\
  /usr/bin\
  /usr/local/bin\
  /usr/local/sbin\
  "${XDG_BIN_HOME}"\
  /usr/bin/core_perl

has cargo && pathappend "${HOME}/.cargo/bin"
has cabal && pathappend "${HOME}/.cabal/bin"
has ghcup && pathappend "${HOME}/.ghcup/bin"
has go && pathappend "${GOBIN:-"$GOPATH/bin"}"
pathappend "/opt/homebrew/opt/postgresql@16/bin"

# Prevent Ctrl-s from stopping the terminal
stty stop undef

set -o vi
shopt -s histappend
shopt -s checkwinsize
shopt -s expand_aliases
shopt -s globstar
shopt -s dotglob
shopt -s extglob

alias ls="ls --color=always"
alias grep="grep --color=always"
has exa && alias exa="exa --color=always"

unalias -a
alias cp="cp -ir"
alias rm="rm -i"
alias mv="mv -i"

case "$(uname)" in
  Darwin)
    alias doas="sudo"

    hb="${HOMEBREW_PREFIX:-"/opt/homebrew"}"
    [[ -f "$hb/bin/brew" ]] && eval "$($hb/bin/brew shellenv)"
    [[ -d "$hb/opt/openjdk/bin" ]] && pathprepend "$hb/opt/openjdk/bin"

    # Use biometrics to unlock keys via Secretive
    sock="/Users/${USER}/Library/Containers/com.maxgoedjen.Secretive.SecretAgent/Data/socket.ssh"
    export SSH_AUTH_SOCK="${sock}"

    if [[ -r "$hb/etc/profile.d/bash_completion.sh" ]]; then
      source "$hb/etc/profile.d/bash_completion.sh" 
      if [[ -d "$hb/opt/nvm" ]]; then
        export NVM_DIR="${HOME}/.nvm"
        source "$hb/opt/nvm/nvm.sh"
        source "$hb/opt/nvm/etc/bash_completion.d/nvm"
      fi
      has hcloud && source <(hcloud completion bash)
    fi
    ;;
esac

has exa && alias ls="exa -l"
has exa && alias tree="exa --tree"
#has nvim && alias vi="nvim"
has nvm && unset npm_config_prefix
has tmux && alias tmux="tmux -f $HOME/.config/tmux.conf"
